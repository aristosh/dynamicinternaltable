class ZCL_ZCA_TYPE_UTILS definition
  public
  final
  create public .

public section.

  types:
    begin of ty_STRUC_DEFINITION,
            fname TYPE char30,
            ftype TYPE char30,
          end of ty_STRUC_DEFINITION .
  types:
    TT_STRUC_DEFINITION TYPE STANDARD TABLE OF ty_struc_definition .

  class-methods GENERATE_STRUCTURE
    importing
      !IM_IT_STRUC_DEF type TT_STRUC_DEFINITION
    returning
      value(RESULT) type ref to DATA .
  class-methods GENERATE_TABLE
    importing
      !IM_IT_TABLE_DEF type TT_STRUC_DEFINITION
    returning
      value(RESULT) type ref to DATA .
protected section.
private section.
ENDCLASS.



CLASS ZCL_ZCA_TYPE_UTILS IMPLEMENTATION.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Static Public Method ZCL_ZCA_TYPE_UTILS=>GENERATE_STRUCTURE
* +-------------------------------------------------------------------------------------------------+
* | [--->] IM_IT_STRUC_DEF                TYPE        TT_STRUC_DEFINITION
* | [<-()] RESULT                         TYPE REF TO DATA
* +--------------------------------------------------------------------------------------</SIGNATURE>
METHOD GENERATE_STRUCTURE.
*&---------------------------------------------------------------------*
*& Developer        : Aristo (c)
*&---------------------------------------------------------------------*
*                `
*               .:;'''''''''';:.`
*           ,+#',`             `,+#+:`
*        ,++.`  `,;'',``        .'+''++@@@@+;`
*   `  :#; `:+@@;`   `````.....``    .'##@+:;#+`
*    ,@, :###. :@+:::;#+,         `+#.   .+##+.
*   ;'`:+#'. .#,        ''`      ,#,    .'@#,;:
*  ,+`      .#.         `+,     `',         `''
*  ';`   ```:+`,@@@+`   `+:     `':        `''#:
* `+.   `,:,;#'.+#,     ;+`      `:@@++##@#@#.';`
* :'`      ..`.'+':,,,'#,           `';      .'+.
*`+:      ``               ``  ``;#@+``'#;:+#: `+,
*`+,                        `...` ;+ .+@';;:,#, :'
*.#.                   .:,.``````;#.`':`;`;`':+`,'`
*`+,                   ``   `    ''`.+:`.....,#.;;
*`;' `                   ````````,+`.+.      :+.',`''`      `:'++++':``.++.
* .+.`,  `  `                    `+,.+.     `+.;'``''`     `:+:`  `:+:`.+'.
*  ;'``.`, `.`                   `':.+.    `':`#, `''`     .''.   `.''..''.
*  `+, `...  `.`      ``         `';.'.    `+.`+, `''` `` `.'+. `` ,''..''.`
*  `:'  `,:`   .`     `.,:,`     .+,:;`    .'. :;``'':,,,,.`,++:,,:++, .'':,,,,`
*   `';  `:,`  ``      `.``,,.   ;;`+#'';,  ;; .'.`,;;;:::,  `.,::,.`  `:::::::.
*    `+;` .:,` `.         ...`  .'`.+`   `;:.+.`'.
*     `+:` ...  `,`   `:++;` ,.`'; ,+,,,,::'#+``'`
*      `+:  .:,`` `..      .;;` +: ,'`;.,:' :; .'.
*       `'+`  .`.,.  .,`    ` :+#: `++.`:;#@+` :;`
*         ,+;  `.,..,.```       ''` `:++'+#;` :#`
*           ,#+.   `.,::,.`.``   ''`        `''`
*              .'@+,`    `.,,..`..`:##+''+#',`
*               `  ,+@@',`        ````;#:
*                        ,'#',`.,'@'.`
*                            `..`
*&---------------------------------------------------------------------*
  DATA lit_components TYPE CL_ABAP_STRUCTDESCR=>component_table.
  DATA lwa_component  TYPE CL_ABAP_STRUCTDESCR=>component.
  DATA lwa_struct_def TYPE zcl_zca_type_utils=>ty_struc_definition.

  DATA lref_structdesct TYPE REF TO cl_abap_structdescr.

  LOOP AT im_it_struc_def INTO lwa_struct_def WHERE fname IS NOT INITIAL.
    lwa_component-name = lwa_struct_def-fname.
    lwa_component-type ?= cl_abap_datadescr=>describe_by_name( lwa_struct_def-ftype ).
    APPEND lwa_component TO lit_components.
  ENDLOOP.

  cl_abap_structdescr=>create(
    EXPORTING
      p_components = lit_components
    RECEIVING
      p_result = lref_structdesct
  ).

  CREATE DATA result TYPE HANDLE lref_structdesct.

ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Static Public Method ZCL_ZCA_TYPE_UTILS=>GENERATE_TABLE
* +-------------------------------------------------------------------------------------------------+
* | [--->] IM_IT_TABLE_DEF                TYPE        TT_STRUC_DEFINITION
* | [<-()] RESULT                         TYPE REF TO DATA
* +--------------------------------------------------------------------------------------</SIGNATURE>
METHOD generate_table.
*&---------------------------------------------------------------------*
*& Developer        : Aristo (c)
*&---------------------------------------------------------------------*
*                `
*               .:;'''''''''';:.`
*           ,+#',`             `,+#+:`
*        ,++.`  `,;'',``        .'+''++@@@@+;`
*   `  :#; `:+@@;`   `````.....``    .'##@+:;#+`
*    ,@, :###. :@+:::;#+,         `+#.   .+##+.
*   ;'`:+#'. .#,        ''`      ,#,    .'@#,;:
*  ,+`      .#.         `+,     `',         `''
*  ';`   ```:+`,@@@+`   `+:     `':        `''#:
* `+.   `,:,;#'.+#,     ;+`      `:@@++##@#@#.';`
* :'`      ..`.'+':,,,'#,           `';      .'+.
*`+:      ``               ``  ``;#@+``'#;:+#: `+,
*`+,                        `...` ;+ .+@';;:,#, :'
*.#.                   .:,.``````;#.`':`;`;`':+`,'`
*`+,                   ``   `    ''`.+:`.....,#.;;
*`;' `                   ````````,+`.+.      :+.',`''`      `:'++++':``.++.
* .+.`,  `  `                    `+,.+.     `+.;'``''`     `:+:`  `:+:`.+'.
*  ;'``.`, `.`                   `':.+.    `':`#, `''`     .''.   `.''..''.
*  `+, `...  `.`      ``         `';.'.    `+.`+, `''` `` `.'+. `` ,''..''.`
*  `:'  `,:`   .`     `.,:,`     .+,:;`    .'. :;``'':,,,,.`,++:,,:++, .'':,,,,`
*   `';  `:,`  ``      `.``,,.   ;;`+#'';,  ;; .'.`,;;;:::,  `.,::,.`  `:::::::.
*    `+;` .:,` `.         ...`  .'`.+`   `;:.+.`'.
*     `+:` ...  `,`   `:++;` ,.`'; ,+,,,,::'#+``'`
*      `+:  .:,`` `..      .;;` +: ,'`;.,:' :; .'.
*       `'+`  .`.,.  .,`    ` :+#: `++.`:;#@+` :;`
*         ,+;  `.,..,.```       ''` `:++'+#;` :#`
*           ,#+.   `.,::,.`.``   ''`        `''`
*              .'@+,`    `.,,..`..`:##+''+#',`
*               `  ,+@@',`        ````;#:
*                        ,'#',`.,'@'.`
*                            `..`
*&---------------------------------------------------------------------*
  DATA lref_struc      TYPE REF TO data.
  DATA lref_datadescr  TYPE REF TO cl_abap_datadescr.
  DATA lref_tabledescr TYPE REF TO cl_abap_tabledescr.

  lref_struc = zcl_zca_type_utils=>generate_structure( im_it_table_def ).
  lref_datadescr ?= cl_abap_structdescr=>describe_by_data_ref( lref_struc ).

  cl_abap_tabledescr=>create(
    EXPORTING
      p_line_type   = lref_datadescr
      p_table_kind  = cl_abap_tabledescr=>tablekind_std
    RECEIVING
      p_result      = lref_tabledescr
  ).

  CREATE DATA result TYPE HANDLE lref_tabledescr.
ENDMETHOD.
ENDCLASS.